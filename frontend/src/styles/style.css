/* --- Product List Specific Styles (index.html) --------------------------------------------------- */
.main-content-layout {
    display: grid;
    grid-template-columns: 1fr; /* Stack sidebar and product grid on small screens */
    gap: 2rem;
    padding-top: 2rem;
    padding-bottom: 2rem;
}

/* This targets the main content layout for larger screens */
@media (min-width: 1024px) {
    .main-content-layout {
        grid-template-columns: 250px 1fr; /* Fixed sidebar width, content takes rest */
    }
}


.sidebar {
    background-color: white;
    padding: 1.5rem;
    border-radius: 0.5rem;
    /* Removed flex-shrink, width, max-width, max-height as grid handles it */
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

/* Ensure the Product Grid itself takes up available space */
.product-grid {
    display: grid;
    /* This rule now applies to the actual product cards which are direct children of the div inside product-grid */
    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
    gap: 2rem; /* Adjusted gap slightly to be consistent */
    align-items: start; /* Align cards to the top of their grid cells */
}

/* New CSS rule for the container that holds the actual product cards */
#product-cards-container { /* Renamed from #product-cards to match React component */
    display: grid;
    /* This grid template will be inherited from .product-grid (its parent)
       or you can explicitly set it if you want different grid behavior inside.
       For now, let's keep it simple and let .product-grid define the grid. */
    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr)); /* Explicitly set here to ensure grid behavior */
    gap: 1.5rem; /* Adjusted gap to be slightly smaller within the product-cards-container */
    /* Remove `grid-column: 1 / -1;` from here, as this container IS the grid now */
}

/* Corrected selector for the image within the product card */
.product-card .product-image { /* Target the img directly */
    width: 100%;
    height: 30rem; /* Fixed height for uniformity */
    object-fit: scale-down; /* Crop images to fit */
    display: block;
    padding: 1.5rem 0.8rem 0; /* Padding around the image */
}

.product-card {
    display: flex;
    flex-direction: column;
    background-color: #fff;
    border: 1px solid #ddd;
    border-radius: 0.5rem;
    overflow: hidden;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
    /* Removed redundant display:flex, flex-direction:column */
    /* Remove min-width if grid handles it and you want it more flexible */
    min-width: 22rem; /* Keep if cards shouldn't shrink below this */
}

.product-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
}

/* Ensure these are now inside .product-card-content */
.product-card-content {
    padding: 15px;
    flex-grow: 1; /* Allows content to grow and fill space */
    display: flex;
    flex-direction: column;
}

.product-card-name {
    font-size: 1.3em;
    font-weight: bold;
    margin-bottom: 8px;
    color: #333;
    line-height: 1.3;
}

.product-price {
    font-size: 1.5em;
    font-weight: bold;
    color: #333; /* Changed from #007bff as per product detail, assuming a consistent color */
    margin-top: auto; /* Push price to bottom if content varies */
    margin-bottom: 0.6rem;
}

/* New/Adjusted styles for the edit button within the card */
.edit-product-button {
    /* Inherits styling from .btn and .secondary-btn */
    margin-top: 1rem; /* Space from other elements, adjust as needed */
    text-align: center; /* Center the button text if it's an anchor */
    display: block; /* Make it block level to take full width */
    width: 100%;
}

/* Add some margin to the page title within the grid if it's the first item */
.product-grid .page-title {
    grid-column: 1 / -1; /* This is correct: span from the first to the last column line */
    text-align: center;
    margin-bottom: 1.25rem;
}

/* Ensure the main content `container` class is applied in ProductList.jsx */
/* .container { display: flex; flex-wrap: wrap; ... } */
/* This might be causing your sidebar/main content not to align if not applied to the root */
/* In ProductList.jsx, ensure <main className="flex-grow container mx-auto p-6 md:p-10 main-content-layout">
   becomes <main className="main-content-layout container"> if you want container styles */